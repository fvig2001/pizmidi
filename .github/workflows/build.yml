name: Build
on: [push]
jobs:
    build-mac-universal:
        name: macOS (universal)
        runs-on: macos-11
        env:
            PRESET: mac-universal
        steps:
            - name: Install ninja
              run: |
                  brew update
                  brew install ninja
            - name: Checkout pizmidi
              uses: actions/checkout@v2
            - name: Configure pizmidi
              run: cmake -S . --preset=$PRESET
            - name: Build pizmidi plugins
              run: cmake --build build/$PRESET --parallel
            - name: Build pizmidi packages
              run: cmake --build build/$PRESET --parallel --target package
            - name: Store packages
              uses: actions/upload-artifact@v2
              with:
                  name: packages
                  path: |
                      build/${{ env.PRESET }}/packages
                      !build/${{ env.PRESET }}/packages/_CPack_Packages
    build-ubuntu2004-x86_64:
        name: Ubuntu 20.04 (x86_64)
        runs-on: ubuntu-20.04
        env:
            PRESET: linux-native
        steps:
            - name: Install build dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y \
                    libasound2-dev libjack-jackd2-dev \
                    ladspa-sdk \
                    libcurl4-openssl-dev  \
                    libfreetype6-dev \
                    libx11-dev libxcomposite-dev libxcursor-dev libxcursor-dev libxext-dev libxinerama-dev libxrandr-dev libxrender-dev \
                    libwebkit2gtk-4.0-dev \
                    libglu1-mesa-dev mesa-common-dev \
                    ninja-build
            - name: Checkout pizmidi
              uses: actions/checkout@v2
            - name: Configure pizmidi
              run: cmake -S . --preset=$PRESET
            - name: Build pizmidi plugins
              run: cmake --build build/$PRESET --parallel
            - name: Build pizmidi packages
              run: cmake --build build/$PRESET --parallel --target package
            - name: Store packages
              uses: actions/upload-artifact@v2
              with:
                  name: packages
                  path: |
                      build/${{ env.PRESET }}/packages
                      !build/${{ env.PRESET }}/packages/_CPack_Packages
